from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from database.main import async_session
from database.models.user import User 
from database.models.pet import Pet 
import os

router = Router()

@router.message(F.text == "üê∂ –ú–æ–π –ø–∏—Ç–æ–º–µ—Ü")
async def p_profile(message: Message, user: User, pet: Pet):
        async with async_session() as session:
            async with session.begin():
                user = await session.get(User, message.from_user.id)

                if not user:
                    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start.")
                    return            

                pet = await session.get(Pet, user.user_pet_id)
                if not user:
                    return
                if not user.user_pet_id or not pet:
                    return

                from .actions import pets

                pet_type_correct = "NULL"
                for pet_l, code in pets:
                    if code == pet.pet_type:
                        pet_type_correct = pet_l
                        break

                image_path = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "resources", "GPT-IMG", f"{code}.png"))
                photo = FSInputFile(image_path)
                
                caption = (
                    f"<b>üìú –ü—Ä–æ—Ñ–∏–ª—å –ø–∏—Ç–æ–º—Ü–∞ {pet.pet_name}</b>\n"
                    f"<b>{pet_type_correct}</b>\n"
                    f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: <code>{pet.pet_birthday}</code>\n"
                    f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: <b>{pet.pet_health} / 100</b>\n"
                    f"üçó –°—ã—Ç–æ—Å—Ç—å: <b>{pet.pet_hunger} / 100</b>\n"
                    f"üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: <b>{pet.pet_happiness} / 100</b>\n"
                    f"‚≠ê –£—Ä–æ–≤–µ–Ω—å: <b>{pet.pet_lvl}</b>\n"
                    f"‚ú® –û–ø—ã—Ç: <b>{pet.pet_xp}</b>"
                )

                await message.answer_photo(photo, caption=caption, parse_mode="html")
